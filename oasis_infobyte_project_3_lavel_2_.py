# -*- coding: utf-8 -*-
"""oasis infobyte_project_3_Lavel_2_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SvFuxpqZdd_Xc2y6_Y2azSZjiG5x7jlP
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/creditcard.csv')
df

df.isnull().sum()

df = df.dropna()

df.isnull().sum()

df.duplicated().sum()

df.describe()

df.info()

df['Class'].value_counts()

# class distribution

sns.countplot(x='Class', data=df)
plt.title("Class Distribution")
plt.show()

x = df.drop(columns=['Class'],axis=1)
y = df['Class']

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test = train_test_split(x,y,test_size=0.2,random_state=42)

X_train

from sklearn.preprocessing import StandardScaler
scaler =StandardScaler()
X_train_scaled =scaler.fit_transform(X_train)
X_test_scaled =scaler.transform(X_test)

X_train_scaled

from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import classification_report, roc_auc_score, confusion_matrix

models = {
    "Logistic Regression": LogisticRegression(),
    "Decision Tree": DecisionTreeClassifier(random_state=42),
    "Neural Network": MLPClassifier(hidden_layer_sizes=(32, 16), max_iter=100, random_state=42)}

for model_name,model in models.items():
  model.fit(X_train_scaled,Y_train)
  y_pred = model.predict(X_test_scaled)
  print('model_name :',model_name)
  print('Classification_report :\n',classification_report(Y_test,y_pred))
  print(f"AUC-ROC: {roc_auc_score(Y_test, model.predict_proba(X_test_scaled)[:, 1]):.2f}")

lr = models['Logistic Regression']
lr.fit(X_train_scaled,Y_train)
y_pred2 = lr.predict(X_test_scaled)
print('confusion_matrix :\n',confusion_matrix(Y_test,y_pred2))